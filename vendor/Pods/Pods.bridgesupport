<?xml version='1.0'?>
<signatures version='1.0'>
<enum value='0' name='MBProgressHUDAnimationFade'/>
<enum value='1' name='MBProgressHUDAnimationZoom'/>
<enum value='2' name='MBProgressHUDAnimationZoomIn'/>
<enum value='1' name='MBProgressHUDAnimationZoomOut'/>
<enum value='3' name='MBProgressHUDModeAnnularDeterminate'/>
<enum value='4' name='MBProgressHUDModeCustomView'/>
<enum value='1' name='MBProgressHUDModeDeterminate'/>
<enum value='2' name='MBProgressHUDModeDeterminateHorizontalBar'/>
<enum value='0' name='MBProgressHUDModeIndeterminate'/>
<enum value='5' name='MBProgressHUDModeText'/>
<enum value='10' name='SVInfiniteScrollingStateAll'/>
<enum value='2' name='SVInfiniteScrollingStateLoading'/>
<enum value='0' name='SVInfiniteScrollingStateStopped'/>
<enum value='1' name='SVInfiniteScrollingStateTriggered'/>
<enum value='10' name='SVPullToRefreshStateAll'/>
<enum value='2' name='SVPullToRefreshStateLoading'/>
<enum value='0' name='SVPullToRefreshStateStopped'/>
<enum value='1' name='SVPullToRefreshStateTriggered'/>
<class name='MBBarProgressView'>
<method selector='lineColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='progressRemainingColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='setLineColor:'>
<arg index='0' type='@' name='lineColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:'>
<arg index='0' type='f' name='progress' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressColor:'>
<arg index='0' type='@' name='progressColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressRemainingColor:'>
<arg index='0' type='@' name='progressRemainingColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='MBProgressHUD'>
<method selector='HUDForView:' class_method='true'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='allHUDsForView:' class_method='true'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='animationType'>
<retval type='i' declared_type='MBProgressHUDAnimation'/>
</method>
<method selector='color'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='completionBlock'>
<retval function_pointer='true' type='@?' declared_type='MBProgressHUDCompletionBlock'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='customView'>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='detailsLabelFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='detailsLabelText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dimBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='graceTime'>
<retval type='f' declared_type='float'/>
</method>
<method selector='hide:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hide:afterDelay:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='d' name='delay' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideAllHUDsForView:animated:' class_method='true'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='hideHUDForView:animated:' class_method='true'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithView:'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindow:'>
<arg index='0' type='@' name='window' declared_type='UIWindow*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSquare'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='labelFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='labelText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='margin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minShowTime'>
<retval type='f' declared_type='float'/>
</method>
<method selector='minSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='mode'>
<retval type='i' declared_type='MBProgressHUDMode'/>
</method>
<method selector='opacity'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAnimationType:'>
<arg index='0' type='i' name='animationType' declared_type='MBProgressHUDAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' name='color' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionBlock:'>
<arg index='0' function_pointer='true' type='@?' name='completionBlock' declared_type='MBProgressHUDCompletionBlock'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomView:'>
<arg index='0' type='@' name='customView' declared_type='UIView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg index='0' type='@' name='detailsLabelFont' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDetailsLabelText:'>
<arg index='0' type='@' name='detailsLabelText' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDimBackground:'>
<arg index='0' type='B' name='dimBackground' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraceTime:'>
<arg index='0' type='f' name='graceTime' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFont:'>
<arg index='0' type='@' name='labelFont' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelText:'>
<arg index='0' type='@' name='labelText' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg index='0' type='f' name='margin' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinShowTime:'>
<arg index='0' type='f' name='minShowTime' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinSize:'>
<arg index='0' type='{CGSize=ff}' name='minSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg index='0' type='i' name='mode' declared_type='MBProgressHUDMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='f' name='opacity' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:'>
<arg index='0' type='f' name='progress' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg index='0' type='B' name='removeFromSuperViewOnHide' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSquare:'>
<arg index='0' type='B' name='square' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTaskInProgress:'>
<arg index='0' type='B' name='taskInProgress' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXOffset:'>
<arg index='0' type='f' name='xOffset' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYOffset:'>
<arg index='0' type='f' name='yOffset' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='show:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='dispatch_block_t'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:completionBlock:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='dispatch_block_t'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' type='@?' name='completion' declared_type='MBProgressHUDCompletionBlock'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='dispatch_block_t'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@' name='queue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:completionBlock:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='dispatch_block_t'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@' name='queue' declared_type='dispatch_queue_t'/>
<arg index='3' function_pointer='true' type='@?' name='completion' declared_type='MBProgressHUDCompletionBlock'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showHUDAddedTo:animated:' class_method='true'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg index='0' type=':' name='method' declared_type='SEL'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type='@' name='object' declared_type='id'/>
<arg index='3' type='B' name='animated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='taskInProgress'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='xOffset'>
<retval type='f' declared_type='float'/>
</method>
<method selector='yOffset'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='backgroundTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='isAnnular'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='progress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='setAnnular:'>
<arg index='0' type='B' name='annular' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundTintColor:'>
<arg index='0' type='@' name='backgroundTintColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgress:'>
<arg index='0' type='f' name='progress' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressTintColor:'>
<arg index='0' type='@' name='progressTintColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSObject'>
<method selector='hudWasHidden:'>
<arg index='0' type='@' name='hud' declared_type='MBProgressHUD*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='SVInfiniteScrollingView'>
<method selector='activityIndicatorViewStyle'>
<retval type='i' declared_type='UIActivityIndicatorViewStyle'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg index='0' type='i' name='activityIndicatorViewStyle' declared_type='UIActivityIndicatorViewStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomView:forState:'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<arg index='1' type='I' name='state' declared_type='SVInfiniteScrollingState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimating'>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type='I' declared_type='SVInfiniteScrollingState'/>
</method>
<method selector='stopAnimating'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='SVPullToRefreshView'>
<method selector='activityIndicatorViewStyle'>
<retval type='i' declared_type='UIActivityIndicatorViewStyle'/>
</method>
<method selector='arrowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='dateFormatter'>
<retval type='@' declared_type='NSDateFormatter*'/>
</method>
<method selector='dateLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='lastUpdatedDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg index='0' type='i' name='activityIndicatorViewStyle' declared_type='UIActivityIndicatorViewStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArrowColor:'>
<arg index='0' type='@' name='arrowColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomView:forState:'>
<arg index='0' type='@' name='view' declared_type='UIView*'/>
<arg index='1' type='I' name='state' declared_type='SVPullToRefreshState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormatter:'>
<arg index='0' type='@' name='dateFormatter' declared_type='NSDateFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateLabel:'>
<arg index='0' type='@' name='dateLabel' declared_type='UILabel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLastUpdatedDate:'>
<arg index='0' type='@' name='lastUpdatedDate' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitle:forState:'>
<arg index='0' type='@' name='subtitle' declared_type='NSString*'/>
<arg index='1' type='I' name='state' declared_type='SVPullToRefreshState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitleLabel:'>
<arg index='0' type='@' name='subtitleLabel' declared_type='UILabel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' name='textColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:forState:'>
<arg index='0' type='@' name='title' declared_type='NSString*'/>
<arg index='1' type='I' name='state' declared_type='SVPullToRefreshState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleLabel:'>
<arg index='0' type='@' name='titleLabel' declared_type='UILabel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimating'>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type='I' declared_type='SVPullToRefreshState'/>
</method>
<method selector='stopAnimating'>
<retval type='v' declared_type='void'/>
</method>
<method selector='subtitleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='triggerRefresh'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='addInfiniteScrollingWithActionHandler:'>
<arg index='0' function_pointer='true' type='@?' name='actionHandler' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPullToRefreshWithActionHandler:'>
<arg index='0' function_pointer='true' type='@?' name='actionHandler' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='infiniteScrollingView'>
<retval type='@' declared_type='SVInfiniteScrollingView*'/>
</method>
<method selector='pullToRefreshView'>
<retval type='@' declared_type='SVPullToRefreshView*'/>
</method>
<method selector='setInfiniteScrollingView:'>
<arg index='0' type='@' name='infiniteScrollingView' declared_type='SVInfiniteScrollingView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPullToRefreshView:'>
<arg index='0' type='@' name='pullToRefreshView' declared_type='SVPullToRefreshView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsInfiniteScrolling:'>
<arg index='0' type='B' name='showsInfiniteScrolling' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsPullToRefresh:'>
<arg index='0' type='B' name='showsPullToRefresh' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsInfiniteScrolling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsPullToRefresh'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='triggerInfiniteScrolling'>
<retval type='v' declared_type='void'/>
</method>
<method selector='triggerPullToRefresh'>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='MBProgressHUDDelegate'>
<method type='v12@0:4@8' selector='hudWasHidden:'>
<arg index='0' type='@' name='hud' declared_type='MBProgressHUD*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
